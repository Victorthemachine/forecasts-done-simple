{"version":3,"sources":["components/Navbar.js","components/globalStyle.js","components/Theme.js","components/ForecastElement.js","components/_Clock.js","pages/Landing.js","pages/Map.js","pages/Settings.js","components/Footer.js","reportWebVitals.js","redux/reducers/darkmode.reducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Navbar","props","nameArray","routeArray","i","components","push","navbarButtons","map","el","index","className","length","onClick","history","class","state","names","routes","style","styleSheet","this","Component","withRouter","GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","toggleBorder","background","darkTheme","ForecastElement","unix","console","log","Date","getDay","error","format","date","main","desc","_Clock","timezone","ticking","React","Landing","localStorage","getItem","currentForecast","weeklyForecast","darkmode","location","lon","lat","navigator","geolocation","getCurrentPosition","position","address","config","port","coords","latitude","longitude","axios","post","then","res","data","dt","weather","name","mainForecast","description","Math","floor","temp","setState","catch","err","response","daily","forecastTable","forEach","imgPath","src","alt","slideButtonHandler","bind","checked","event","id","setItem","settingsCSS","onChange","onColor","offColor","onHandleColor","offHandleColor","checkedIcon","uncheckedIcon","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","rootReducer","combineReducers","darkmodeReducer","store","createStore","ReactDOM","render","StrictMode","exact","path","Map","Settings","Footer","document","getElementById"],"mappings":"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","file":"static/js/main.2bd646a2.chunk.js","sourcesContent":["import { withRouter } from 'react-router-dom';\nimport { Component } from 'react';\nimport styleSheet from './../styles/navbar.css';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        const nameArray = [];\n        const routeArray = [];\n        for (let i in props.components) {\n            nameArray.push(i);\n            routeArray.push(props.components[i]);\n        }\n\n        const navbarButtons = nameArray.map((el, index) => {\n            let className = index === 0 ? 'first' : index === nameArray.length - 1 ? 'last' : 'between';\n            return <button onClick={() => { this.props.history.push(routeArray[index]) }} class={className}>{el}</button>;\n        });\n        this.state = {\n            index: 0,\n            names: nameArray,\n            routes: routeArray,\n            navbarButtons: navbarButtons,\n        }\n    }\n    render() {\n        return (\n            <div class={'navbar'} style={styleSheet}>\n                {this.state.navbarButtons}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Navbar);","import { createGlobalStyle } from \"styled-components\"\nexport const GlobalStyles = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Oxanium&display=swap');\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: \"Oxanium\", sans-serif;\n    transition: all 0.50s linear;\n  }\n  `;\nexport default GlobalStyles;","export const lightTheme = {\n    body: '#FFF',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    background: '#363537',\n}\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    background: '#999',\n}","import { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass ForecastElement extends Component {\r\n\r\n    formatTime(unix) {\r\n        console.log(unix);\r\n        const date = new Date(unix);\r\n        switch (date.getDay()) {\r\n            case 0:\r\n                return \"Monday\";\r\n            case 1:\r\n                return \"Tuesday\";\r\n            case 2:\r\n                return \"Wednesday\";\r\n            case 3:\r\n                return \"Thursday\";\r\n            case 4:\r\n                return \"Friday\";\r\n            case 5:\r\n                return \"Saturday\";\r\n            case 6:\r\n                return \"Sunday\";\r\n            default:\r\n                console.error('Wtf is wrong with your time bruv');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ 'align': 'center' }}>\r\n                <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n                    <h1 style={{ 'color': '#ff8000' }}>\r\n                        <Moment format='dddd' unix>{this.props.date}</Moment>\r\n                    </h1>\r\n                </div>\r\n                <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n                    <h1>\r\n                        {this.props.main}\r\n                    </h1>\r\n                    <br />\r\n                    <h2>\r\n                        {this.props.desc}\r\n                    </h2>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForecastElement;","import React from 'react';\r\nimport Clock from 'react-live-clock';\r\nimport Moment from 'react-moment';\r\n\r\nexport default class _Clock extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timezone: props.timezone === 'Fetching...' ? 'US/Pacific' : props.timezone\r\n    }\r\n    //moment.tz.add(this.state.timezone);\r\n  }\r\n\r\n  render() {\r\n    console.log('============SUS==============');\r\n    console.log(this.state);\r\n    console.log('=============================');\r\n    return (\r\n      <div style={{ 'align': 'center' }}>\r\n        <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n          <h1>\r\n            <Moment format='YYYY/MM/DD' unix>{this.props.unix}</Moment>\r\n          </h1>\r\n        </div>\r\n        <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n          <h1>\r\n            <Clock format={'HH:mm:ss'} ticking={true} timezone={this.state.timezone} />\r\n          </h1>\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}","import React from 'react';\nimport axios from 'axios';\nimport config from '../config.json';\n\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../components/globalStyle\";\nimport { lightTheme, darkTheme } from \"../components/Theme\"\nimport ForecastElement from '../components/ForecastElement';\nimport Clock from '../components/_Clock';\n\nclass Landing extends React.Component {\n\n    constructor(props) {\n        console.log(typeof localStorage.getItem('darkmode'));\n        super(props);\n        this.state = {\n            currentForecast: \"Fetching...\",\n            weeklyForecast: \"Fetching...\",\n            timezone: \"Fetching...\",\n            unix: 'Fetching...',\n            darkmode: localStorage.getItem('darkmode') === 'true' ? true : false,\n            location: {\n                lon: '',\n                lat: ''\n            }\n        };\n    }\n\n    componentDidMount() {\n        navigator.geolocation.getCurrentPosition((position, error) => {\n            let address;\n            if (error) {\n                address = `http://${config.address}:${config.port}/secure/forecast?city=london`;\n            } else {\n                address = `http://${config.address}:${config.port}/secure/forecast?lat=${position.coords.latitude}&lon=${position.coords.longitude}`;\n            }\n            axios.post(address)\n                .then(res => {\n                    const { timezone, data: { dt, weather, main, name } } = res;\n                    const mainForecast = <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\n                        <h1>{name}</h1>\n                        <h2>{weather[0].main}</h2>\n                        <h2>{weather[0].description}</h2>\n                        <h2>{Math.floor(main.temp - 273.15)} °C</h2>\n                    </div>;\n                    this.setState({ currentForecast: mainForecast, timezone: timezone, unix: dt });\n                })\n                .catch(err => {\n                    console.error(err);\n                })\n            axios.post(`http://${config.address}:${config.port}/secure/weekly?lon=${position.coords.longitude}&lat=${position.coords.latitude}`)\n                .then(response => {\n                    const { data: { daily } } = response;\n                    const forecastTable = [];\n                    daily.forEach(el => {\n                        forecastTable.push(<ForecastElement\n                            date={el.dt}\n                            main={el.weather[0].main}\n                            desc={el.weather[0].description}\n                            timezone={this.state.timezone}\n                        />);\n                    })\n                    this.setState({ weeklyForecast: forecastTable });\n                })\n                .catch(err => {\n                    console.error(err);\n                })\n            console.log(\"Latitude is :\", position.coords.latitude);\n            console.log(\"Longitude is :\", position.coords.longitude);\n            this.setState();\n        });\n    }\n\n    render() {\n        console.log(this.state.timezone);\n        return (\n            <ThemeProvider theme={this.state.darkmode === false ? lightTheme : darkTheme}>\n                <GlobalStyles />\n                <div style={{ 'align': 'center' }}>\n                    <div style={{ 'display': 'flex', 'align-items': 'center', 'justify-content': 'space-around' }}>\n                        <Clock timezone={this.state.timezone} unix={this.state.unix} />\n                        {this.state.currentForecast}\n                    </div>\n                    <div style={{ 'display': 'flex', 'align-items': 'center', 'justify-content': 'center' }}>\n                        {this.state.weeklyForecast}\n                    </div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default Landing;","import React from 'react';\nimport axios from 'axios';\nimport config from '../config.json';\n\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../components/globalStyle\";\nimport { lightTheme, darkTheme } from \"../components/Theme\"\n\nclass Landing extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            darkmode: localStorage.getItem('darkmode') === 'true' ? true : false,\n            imgPath: ''\n        };\n    }\n\n    componentDidMount() {\n        let address = `http://${config.address}:${config.port}/secure/map`;;\n        axios.post(address)\n            .then(res => {\n                this.setState({ imgPath: res.data });\n            })\n            .catch(err => {\n                console.error(err);\n            })\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={this.state.darkmode === false ? lightTheme : darkTheme}>\n                <GlobalStyles />\n                <img src={this.state.imgPath} alt='uhhh....' style={{ 'height': '80vh', 'object-fit': 'contain' }}></img>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default Landing;","import React from 'react';\nimport Switch from 'react-switch';\nimport { ThemeProvider } from \"styled-components\";\n\nimport { GlobalStyles } from \"../components/globalStyle\";\nimport { lightTheme, darkTheme } from \"../components/Theme\"\nimport settingsCSS from '../styles/settings.css';\n\nclass Landing extends React.Component {\n\n    //rework darkmode var to redux\n    constructor(props) {\n        super(props);\n        this.state = {\n            darkmode: localStorage.getItem('darkmode') === 'true' ? true : false\n        };\n        this.slideButtonHandler = this.slideButtonHandler.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    slideButtonHandler(checked, event, id) {\n        console.log(checked);\n        localStorage.setItem('darkmode', checked);\n        this.setState({ darkmode: checked });\n    }\n\n    render() {\n        return (\n            <ThemeProvider theme={this.state.darkmode === false ? lightTheme : darkTheme}>\n                <GlobalStyles />\n                <div style={settingsCSS}>\n                    <h1>Settings</h1>\n                    <table>\n                        <tr>\n                            <td>\n                                <label>Darkmode: </label>\n                            </td>\n                            <td>\n                                <Switch\n                                    onChange={this.slideButtonHandler}\n                                    checked={this.state.darkmode}\n                                    onColor={'#ffb84d'}\n                                    offColor={'#d9d9d9'}\n                                    onHandleColor={'#ff8000'}\n                                    offHandleColor={'#ff8000'}\n                                    checkedIcon={false}\n                                    uncheckedIcon={false}\n                                />\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default Landing;","import { Component } from 'react';\r\nimport styleSheet from './../styles/footer.css';\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div class='mainDiv' style={styleSheet}>\r\n                <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n                    <p>Created by yours truly, David \"Nya~san\" Mitić</p>\r\n                </div>\r\n                <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n                    <a href='https://github.com/Victorthemachine/forecasts-done-simple'>Repository</a>\r\n                </div>\r\n                <div style={{ 'display': 'inline-block', 'margin': '20px' }}>\r\n                    <p>Powered by <a href='https://openweathermap.org/'>openweather</a></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { updateDarkmode } from '../actions/darkmode.action.js';\nconst INITIAL_STATE = {\n    darkmode: true,\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    return {\n        ...state, darkmode: !state.darkmode,\n    };\n}\n\nexport default reducer;","import { combineReducers } from 'redux';\n\n\nimport darkmodeReducer from './darkmode.reducer';\n\n\nconst rootReducer = combineReducers({\n    darkmode: darkmodeReducer,\n});\n\nexport default rootReducer;","import { createStore } from 'redux';\n\nimport rootReducer from './reducers/rootReducer';\n\n\nconst store = createStore(rootReducer);\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Navbar from './components/Navbar';\nimport Landing from './pages/Landing';\nimport Maps from './pages/Map';\nimport Settings from './pages/Settings';\nimport Footer from './components/Footer';\n\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nif (localStorage.getItem('darkmode') !== 'true' && localStorage.getItem('darkmode') !== 'false') {\n  localStorage.setItem('darkmode', true);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Navbar components={\n          {\n            \"Home\": \"/\",\n            \"Maps\": \"/maps\",\n            \"Settings\": \"/settings\",\n          }\n        } />\n        <Switch>\n          <Route exact path='/'>\n            <Landing />\n          </Route>\n          <Route path='/maps'>\n            <Maps />\n          </Route>\n          <Route path='/settings'>\n            <Settings />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}